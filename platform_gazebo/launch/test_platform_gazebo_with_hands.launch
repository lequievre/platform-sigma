<launch>
    
	<!-- set some ros tools -->
	<arg name="use_pantilt" default="false"/>

	<arg name="robot_name" default="platform_robot_with_hands"/>
	<arg name="robot_urdf_file" default="$(find platform_gazebo)/robot/$(arg robot_name).urdf.xacro"/>
	 
	<arg name="controllers" default="kuka_group_command_controller_fri" />
	
	<arg name="use_left_arm" default="true"/>
	<arg name="use_right_arm" default="true"/>

	<!-- Use or Not Shadow Hand -->
	<arg name="use_left_sh" default="false"/>
    <arg name="use_right_sh" default="false"/>

	<!-- Use or Not Barrett Hand -->
	<arg name="use_left_bh" default="false"/>
    <arg name="use_right_bh" default="false"/>

	<!-- load robotHW configurations to rosparam server -->
	<rosparam command="load" file="$(find double_lwr_robot)/config/double_hw_interface.yaml"/>

	<!-- load all kuka controller configurations to rosparam server -->
	<rosparam file="$(find double_lwr_robot)/config/double_controllers.yaml" command="load"/>
	
	<param name="robot_description" command="$(find xacro)/xacro.py $(arg robot_urdf_file) use_pantilt:=$(arg use_pantilt)  use_left_sh:=$(arg use_left_sh) use_right_sh:=$(arg use_right_sh) use_left_bh:=$(arg use_left_bh) use_right_bh:=$(arg use_right_bh)"/>

	<param name="kuka_lwr_left/robot_description" command="$(find xacro)/xacro.py '$(find double_lwr_robot)/robot/kuka_lwr_left_robot.urdf.xacro'" />
	<param name="kuka_lwr_right/robot_description" command="$(find xacro)/xacro.py '$(find double_lwr_robot)/robot/kuka_lwr_right_robot.urdf.xacro'" />

	<!-- Only Left Shadow Hand Robot Description -->
	<param name="lsh/robot_description" command="$(find xacro)/xacro.py '$(find platform_gazebo)/robot/lsh_shadow_hand.urdf.xacro'" />

    <!-- Only Left Barrett Hand Robot Description -->
	<param name="lbh/robot_description" command="$(find xacro)/xacro.py '$(find platform_gazebo)/robot/lbh_barrett_hand.urdf.xacro'" />

	<!-- Only Right Shadow Hand Robot Description -->
	<param name="rsh/robot_description" command="$(find xacro)/xacro.py '$(find platform_gazebo)/robot/rsh_shadow_hand.urdf.xacro'" />

    <!-- Only Right Barrett Hand Robot Description -->
	<param name="rbh/robot_description" command="$(find xacro)/xacro.py '$(find platform_gazebo)/robot/rbh_barrett_hand.urdf.xacro'" />

	<!-- Properties of Left Shadow Hand Controllers -->
	<rosparam command="load" file="$(find platform_gazebo)/config/lsh_controller_gazebo.yaml"/>
	<rosparam command="load" file="$(find platform_gazebo)/config/lsh_joint_state_controller.yaml"/>

    <!-- Properties of Left Barrett Hand Controllers -->
	<rosparam command="load" file="$(find platform_gazebo)/config/lbh_controller_gazebo.yaml"/>
	<rosparam command="load" file="$(find platform_gazebo)/config/lbh_joint_state_controller.yaml"/>

	<!-- List of Left Shadow Hand Position Controllers -->
	<arg name="lsh_shadow_hand_controllers" default="sh_lh_ffj0_position_controller sh_lh_ffj3_position_controller sh_lh_ffj4_position_controller sh_lh_mfj0_position_controller sh_lh_mfj3_position_controller sh_lh_mfj4_position_controller sh_lh_rfj0_position_controller sh_lh_rfj3_position_controller sh_lh_rfj4_position_controller sh_lh_lfj0_position_controller sh_lh_lfj3_position_controller sh_lh_lfj4_position_controller sh_lh_lfj5_position_controller sh_lh_thj1_position_controller sh_lh_thj2_position_controller sh_lh_thj3_position_controller sh_lh_thj4_position_controller sh_lh_thj5_position_controller sh_lh_wrj1_position_controller sh_lh_wrj2_position_controller" />

    <!-- List of Left Barrett Hand Position Controllers -->
	<arg name="lbh_barrett_hand_controllers" default="lbh_j11_position_controller lbh_j12_position_controller lbh_j22_position_controller lbh_j32_position_controller" />

	<!-- Properties of Right Shadow Hand Controllers -->
	<rosparam command="load" file="$(find platform_gazebo)/config/rsh_controller_gazebo.yaml"/>
	<rosparam command="load" file="$(find platform_gazebo)/config/rsh_joint_state_controller.yaml"/>

    <!-- Properties of Right Barrett Hand Controllers -->
	<rosparam command="load" file="$(find platform_gazebo)/config/rbh_controller_gazebo.yaml"/>
	<rosparam command="load" file="$(find platform_gazebo)/config/rbh_joint_state_controller.yaml"/>

	<!-- List of Right Shadow Hand Position Controllers -->
	<arg name="rsh_shadow_hand_controllers" default="sh_rh_ffj0_position_controller sh_rh_ffj3_position_controller sh_rh_ffj4_position_controller sh_rh_mfj0_position_controller sh_rh_mfj3_position_controller sh_rh_mfj4_position_controller sh_rh_rfj0_position_controller sh_rh_rfj3_position_controller sh_rh_rfj4_position_controller sh_rh_lfj0_position_controller sh_rh_lfj3_position_controller sh_rh_lfj4_position_controller sh_rh_lfj5_position_controller sh_rh_thj1_position_controller sh_rh_thj2_position_controller sh_rh_thj3_position_controller sh_rh_thj4_position_controller sh_rh_thj5_position_controller sh_rh_wrj1_position_controller sh_rh_wrj2_position_controller" />

    <!-- List of Right Barrett Hand Position Controllers -->
	<arg name="rbh_barrett_hand_controllers" default="rbh_j11_position_controller rbh_j12_position_controller rbh_j22_position_controller rbh_j32_position_controller" />

	<arg name="paused" default="false"/>
	<arg name="use_sim_time" default="true"/>
	<arg name="gui" default="true"/>
	<arg name="headless" default="false"/>
	<arg name="debug" default="false"/>

	<!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<!--<arg name="world_name" value="$(find kuka_lwr_gazebo)/worlds/simple_environment.world"/>-->
		<arg name="world_name" value="$(find platform_gazebo)/worlds/table_coke_environment.world"/>
		<arg name="debug" value="$(arg debug)" />
		<arg name="gui" value="$(arg gui)" />
		<arg name="paused" value="$(arg paused)"/>
		<arg name="use_sim_time" value="$(arg use_sim_time)"/>
		<arg name="headless" value="$(arg headless)"/>
		<!--<arg name="verbose" value="true" />-->
	</include>

	<node name="spawn_platform_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model $(arg robot_name)" respawn="false" output="screen" />

	<group if="$(arg use_left_arm)">
		<!-- namespace of left arm -->
		<group ns="kuka_lwr_left">
			    <node name="controller_spawner_left" pkg="controller_manager" type="spawner" respawn="true" output="screen" args="$(arg controllers)"/>	
		</group>

		<!-- Left Barrett Hand -->
		<group if="$(arg use_left_bh)">
			<group ns="lbh">
				<node name="controller_spawner_lbh" pkg="controller_manager" type="spawner" respawn="true" output="screen" args="$(arg lbh_barrett_hand_controllers)"/>
			</group>
     	</group>

		<!-- Left Shadow Hand -->
		<group if="$(arg use_left_sh)">
			<group ns="lsh">
				<node name="controller_spawner_lsh" pkg="controller_manager" type="spawner" respawn="true" output="screen" args="$(arg lsh_shadow_hand_controllers)"/>
			</group>
     	</group>
	</group>

	<group if="$(arg use_right_arm)">
		<!-- namespace of right arm -->
		<group ns="kuka_lwr_right">
			<node name="controller_spawner_right" pkg="controller_manager" type="spawner" respawn="true" output="screen" args="$(arg controllers)"/>
		</group>

		 <!-- Right Barrett Hand -->
		<group if="$(arg use_right_bh)">
			<group ns="rbh">
				<node name="controller_spawner_rbh" pkg="controller_manager" type="spawner" respawn="true" output="screen" args="$(arg rbh_barrett_hand_controllers)"/>
			</group>
     	</group>

		<!-- Right Shadow Hand -->
		<group if="$(arg use_right_sh)">
			<group ns="rsh">
				<!-- Spawn of Position Controllers -->
	 			<node name="controller_spawner_rsh" pkg="controller_manager" type="spawner" respawn="true" output="screen" args="$(arg rsh_shadow_hand_controllers)"/>
			</group>
		</group>
	</group>

	<group if="$(arg use_pantilt)">
		<!-- pantilt needs ***************************************************************************************************************************************  -->
		<!-- pantilt controllers -->
		<arg name="pantilt_controllers" default="pantilt_group_position_controller" />

		<param name="pantilt/robot_description" command="$(find xacro)/xacro.py '$(find pantilt_gazebo)/robot/pantilt_gazebo.urdf.xacro'" />

		<!-- load robotHW pantilt configurations to rosparam server -->
		<rosparam command="load" file="$(find pantilt_gazebo)/config/pantilt_hw_interface.yaml"/>

		<!-- load all pantitlt controller configurations to rosparam server -->
		<rosparam file="$(find pantilt_gazebo)/config/pantilt_control.yaml" command="load"/>

		<!-- namespace pantilt -->
		<group ns="pantilt">
			<!-- spawn only desired controllers in current namespace -->
			<node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="true" output="screen" args="joint_state_controller $(arg pantilt_controllers)"/>
		</group>

		<node name="robot_state_publisher_pantilt" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
				<remap from="/joint_states" to="/pantilt/joint_states" />
		</node>
		<!-- ***************************************************************************************************************************************************  -->
	</group>

</launch>
